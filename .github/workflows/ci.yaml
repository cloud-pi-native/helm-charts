name: Lint and Test Charts

on:
  pull_request:
  workflow_dispatch:

jobs:
  path-filter:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    outputs:
      charts: ${{ steps.filter.outputs.charts }}
    steps:
      - name: Checks-out repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Check updated files paths
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            charts:
              - 'charts/**'

  lint-chart:
    if: ${{ needs.path-filter.outputs.charts == 'true' }}
    name: Lint chart
    runs-on: ubuntu-latest
    needs:
      - path-filter
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@main
        with:
          version: v3.10.0
          yamale_version: "6.0.0"

      - name: Add Helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add cnpg https://cloudnative-pg.github.io/charts
          helm repo add argoproj https://argoproj.github.io/argo-helm
          helm repo add hashicorp https://helm.releases.hashicorp.com

      - name: Run chart-testing (lint)
        run: ct lint --config ./ci/configs/chart-testing.yaml

      # - name: Create kind cluster
      #   uses: helm/kind-action@v1

      # - name: Run chart-testing (install)
      #   run: ct install --config ./ci/configs/chart-testing.yaml

  lint-docs:
    if: ${{ needs.path-filter.outputs.charts == 'true' }}
    name: Lint docs
    runs-on: ubuntu-latest
    needs:
      - path-filter
    steps:
      - name: Checks-out repository
        uses: actions/checkout@v4

      - name: Run helm-docs
        run: ./ci/scripts/helm-docs.sh

  # Workaround for required status check in protection branches (see. https://github.com/orgs/community/discussions/13690)
  all-jobs-passed:
    name: Check jobs status
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - path-filter
      - lint-chart
      - lint-docs
    steps:
      - name: Check status of all required jobs
        run: |-
          NEEDS_CONTEXT='${{ toJson(needs) }}'
          JOB_IDS=$(echo "$NEEDS_CONTEXT" | jq -r 'keys[]')
          for JOB_ID in $JOB_IDS; do
            RESULT=$(echo "$NEEDS_CONTEXT" | jq -r ".[\"$JOB_ID\"].result")
            echo "$JOB_ID job result: $RESULT"
            if [[ $RESULT != "success" && $RESULT != "skipped" ]]; then
              echo "***"
              echo "Error: The $JOB_ID job did not pass."
              exit 1
            fi
          done
          echo "All jobs passed or were skipped."
