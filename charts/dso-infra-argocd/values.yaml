# -- URL argocd pour configurer argocd et le SSO Keycloak
argocdUrl: &argocdUrl argocd.local.fr
# -- Namespace d'installation de l'instance ArgoCD
namespace: dso-argocd
# -- Nom de l'organisation (utilisé dans les annotations)
organization: org
gitlab:
  # -- Url du Gitlab hébergeant le dépôt de code pour cette zone
  url: https://gitlab.com/
  # -- Token d'accès au dépôt Gitlab
  token: secret-token
  # -- URL du dépôt où les applications à déployer par ArgoCD sont spécifiées
  zoneRepo: https://gitlab.com/infra/zone.git
# -- Indique s'il faut installer Vault Secrets Operator (à désactiver si l'opérateur est préinstallé sur le cluster)
vso:
  enabled: true
# -- Indique s'il faut installer ArgoCD (à désactiver si ArgoCD est préinstallé sur le cluster)
argocd:
  enabled: true
# See https://artifacthub.io/packages/helm/argo/argo-cd?modal=values
# @ignored
argo-cd:
  dex:
    enabled: false
  notifications:
    enabled: false
  global:
    domain: *argocdUrl
  configs:
    cm:
      oidc.config: |
        name: Keycloak
        issuer: https://keycloak.local.fr/realms/dso
        clientID: argocd-name-zone
        clientSecret: tobedefined
        requestedScopes: ["openid", "groups"]
  server:
    ingress:
      enabled: true
      https: false
      annotations:
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      hosts:
        - *argocdUrl
    configEnabled: true
    config:
      url: *argocdUrl
    podSecurityContext:
      fsGroup: null
    containerSecurityContext:
      runAsUser: null
    resources:
      requests:
        memory: 75Mi
      limits:
        memory: 150Mi
    metrics:
      serviceMonitor:
        enabled: true
        interval: 60s
  repoServer:
    podSecurityContext:
      fsGroup: null
    containerSecurityContext:
      runAsUser: null
    metrics:
      serviceMonitor:
        enabled: true
        interval: 60s
    resources:
      requests:
        memory: 75Mi
      limits:
        memory: 150Mi
  applicationSet:
    enabled: true
    serviceAccount:
      automountServiceAccountToken: true
    podSecurityContext:
      fsGroup: null
    containerSecurityContext:
      runAsUser: null
    resources:
      requests:
        memory: 500Mi
      limits:
        memory: 1Gi
    metrics:
      serviceMonitor:
        enabled: true
        interval: 60s
  controller:
    defaultArgs:
      selfHealTimeout: 180
    metrics:
      serviceMonitor:
        enabled: true
        interval: 60s
    resources:
      requests:
        memory: 1Gi
      limits:
        memory: 2Gi
  redisSecretInit:
    enable: false
  redis:
    master:
      podSecurityContext:
        fsGroup: null
      containerSecurityContext:
        runAsUser: null
    replica:
      replicaCount: 1
      podSecurityContext:
        enabled: false
      containerSecurityContext:
        enabled: false
